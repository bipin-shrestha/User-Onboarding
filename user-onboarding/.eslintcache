[{"C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\index.js":"1","C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js":"2","C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\App.js":"3","C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\components\\Form.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":197,"mtime":1607481732177,"results":"8","hashOfConfig":"6"},{"size":4182,"mtime":1607493195036,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"gwk2ph",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\index.js",[],["21","22"],"C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js",[],"C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\nimport Form from './components/Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Splitsan\\Documents\\localrepo\\User-Onboarding\\user-onboarding\\src\\components\\Form.js",["24","25","26","27"],"import React, { useState, useEffect } from 'react';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nexport default function Form() {\r\n    const [ formState, setFormState ] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        terms: false\r\n    });\r\n\r\n    const [ serverError, setServerError ] = useState(\"\");\r\n\r\n    const [ buttonDisabled, setButtonDisabled ] = useState(true);\r\n\r\n    const [ data , setData ] = useState([]);\r\n\r\n    const [ usersData ] = useState([]);\r\n\r\n    const [ errors, setErrors ] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        terms: \"\"\r\n    });\r\n\r\n    const validation = (event) =>{\r\n        yup\r\n        .reach(formSchema, event.target.name)\r\n        .validate(\r\n            event.target.type === 'checkbox' ? event.target.checked : event.target.value\r\n        )\r\n        .then((valid)=>{ \r\n            setErrors({ ...errors, [event.target.name] : '' });\r\n        })\r\n        .catch((err) => {\r\n            console.log('err', err);\r\n            setErrors({ ...errors, [event.target.name]: err.errors[0] });\r\n        });    \r\n    };\r\n\r\n    const changeInput =(event) => {\r\n        event.persist();\r\n        const newFormState ={...formState, [event.target.name]:event.target.type === 'checkbox' ? event.target.checked : event.target.value };\r\n        validation(event);\r\n        setFormState(newFormState);\r\n    };\r\n    \r\n    const formSchema = yup.object().shape({\r\n        name: yup.string().required(\"Please Enter the Name.\"),\r\n        email: yup.string().email(),\r\n        password: yup.string().required('Please Enter Password'),\r\n        terms: yup.boolean().oneOf([true],'Please accept our terms and condition.')\r\n    });\r\n    \r\n    useEffect(()=>{\r\n        formSchema.isValid(formState).then((valid) =>{\r\n            console.log(\"Is this form valid?\", valid);\r\n            setButtonDisabled(!valid);\r\n        })\r\n    },[formState]); \r\n\r\n    const formSubmit =(event) =>{\r\n        event.preventDefault();\r\n        axios\r\n        .post('https://reqres.in/api/users' , formState )\r\n        .then((response) =>{\r\n            setData(response.data);\r\n            setFormState({\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                terms: false\r\n            });\r\n            usersData.push(response.data);\r\n        })     \r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n     return(\r\n        <form onSubmit={formSubmit}>\r\n        <label htmlFor='name'>\r\n            Name : \r\n            <input \r\n                id='name'\r\n                type='text'\r\n                name='name'\r\n                value={formState.name}\r\n                onChange ={changeInput}\r\n                />\r\n                {errors.name.length > 0 ? <p className='error'>{errors.name}</p> : null}\r\n        </label>\r\n        <label htmlFor='email'>\r\n            Email :  \r\n            <input \r\n                id='email'\r\n                type='text'\r\n                name='email'\r\n                value={formState.email}\r\n                onChange = {changeInput}\r\n                />\r\n                {errors.email.length > 0 ? <p className='error'>{errors.email}</p> : null}\r\n        </label>\r\n        <label htmlFor='password'>\r\n            Password : \r\n            <input\r\n                id='password'\r\n                type='password'\r\n                name='password'\r\n                value={formState.password}\r\n                onChange ={changeInput}\r\n                />\r\n                {errors.password.length > 0 ? <p className='error'>{errors.password}</p> : null}\r\n        </label>\r\n        <label htmlFor='terms'>\r\n            Terms  \r\n            <input\r\n                id='terms'\r\n                type='checkbox'\r\n                name='terms'\r\n                value={formState.terms}\r\n                onChange ={changeInput}\r\n            />\r\n            {errors.terms.length > 0 ? <p className='error'>{errors.terms}</p> : null}\r\n        </label>\r\n            <button type='submit' disabled={buttonDisabled}>Submit</button>\r\n            {JSON.stringify(usersData, null, 2)}\r\n        </form>\r\n    )\r\n}",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":13,"column":13,"nodeType":"34","messageId":"35","endLine":13,"endColumn":24},{"ruleId":"32","severity":1,"message":"37","line":13,"column":26,"nodeType":"34","messageId":"35","endLine":13,"endColumn":40},{"ruleId":"32","severity":1,"message":"38","line":17,"column":13,"nodeType":"34","messageId":"35","endLine":17,"endColumn":17},{"ruleId":"39","severity":1,"message":"40","line":62,"column":7,"nodeType":"41","endLine":62,"endColumn":18,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'serverError' is assigned a value but never used.","'setServerError' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [formSchema, formState]",{"range":"48","text":"49"},[1931,1942],"[formSchema, formState]"]